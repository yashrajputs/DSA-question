import java.util.Arrays;

public class ArrayRotation {
    public static int[] rotateArray(int[] arr, int positions, String direction) {
        int n = arr.length;
        int[] rotatedArray = new int[n];

        if ("left".equals(direction)) {
            positions = positions % n;
            System.arraycopy(arr, positions, rotatedArray, 0, n - positions);
            System.arraycopy(arr, 0, rotatedArray, n - positions, positions);
        } else if ("right".equals(direction)) {
            positions = positions % n;
            System.arraycopy(arr, n - positions, rotatedArray, 0, positions);
            System.arraycopy(arr, 0, rotatedArray, positions, n - positions);
        } else {
            throw new IllegalArgumentException("Invalid direction. Use 'left' or 'right'.");
        }

        return rotatedArray;
    }

    public static void main(String[] args) {
        int[] myArray = {1, 2, 3, 4, 5, 6, 7, 8, 9};
        int rotatePositions = 2;

        int[] leftRotatedArray = rotateArray(myArray, rotatePositions, "left");
        int[] rightRotatedArray = rotateArray(myArray, rotatePositions, "right");

        System.out.println("Original Array: " + Arrays.toString(myArray));
        System.out.println("Left Rotated Array: " + Arrays.toString(leftRotatedArray));
        System.out.println("Right Rotated Array: " + Arrays.toString(rightRotatedArray));
    }
}
